version: "3.6"

services:
  frontend:
    image: frontend
    build: ./frontend
    container_name: frontend
    restart: always
    networks:
      - microservices
    ports:
      - 4200:4200

  proxy_service:
    image: proxy_service
    build: ./ng
    container_name: proxy_service
    volumes:
      - ./ng/nginx.conf:/etc/nginx.conf
    networks:
      - microservices
    ports:
      - 80:80

  redis_service:
    image: redis:latest
    container_name: redis_service
    networks:
      - microservices
    ports:
      - "6379:6379"
    expose:
      - 6379

  postgres_db_service:
    image: postgres:14
    env_file:
      - .env
    container_name: postgres_db_service
    volumes:
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - microservices

  resource_service:
    image: resource_service
    build: ./resource
    container_name: resource_service
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    expose:
      - 8000
    depends_on:
      - postgres_db_service
      - redis_service
    networks:
      - microservices

  mailer_service:
    image: mailer_service
    build: ./mailer
    container_name: mailer_service
    restart: always
    env_file:
      - mailer.env
    ports:
      - "8002:8002"
    expose:
      - 8002
    networks:
      - microservices

  celery_service:
    image: celery_service
    build:
      context: ./resource
      dockerfile: Dockerfile.celery
    env_file: .env
    container_name: celery_service
    depends_on:
      - redis_service
    networks:
      - microservices

  flower_service:
    image: flower_service
    build:
      context: ./resource
      dockerfile: Dockerfile.flower
    container_name: flower_service
    env_file: .env
    depends_on:
      - redis_service
      - celery_service
    networks:
      - microservices
    ports:
      - 5555:5555

networks:
  microservices:
    driver: bridge
